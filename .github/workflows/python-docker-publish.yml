# This workflow will first upload a Python Package using Twine
# It will then build and upload a Docker image
# These steps happen when a new tag is pushed

name: Python and Docker CI

on:
  push:
    tags:
      - '*.*.*'

jobs:

  python-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build --wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@48b317d84d5f59668bb13be49d1697e36b3ad009
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  docker-image:
    needs: python-package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set tag output
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: wait for actoolkit
      run: sleep 300
    - name: Build the Docker image
      env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERIMAGE_TAG: ${{ steps.vars.outputs.tag }}
      run: |
        docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
        docker build . --file Dockerfile --tag netapp/astra-toolkits:latest --tag netapp/astra-toolkits:$DOCKERIMAGE_TAG
    - name: Push the Docker image
      env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERIMAGE_TAG: ${{ steps.vars.outputs.tag }}
      run: |
        docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
        docker push netapp/astra-toolkits:latest
        docker push netapp/astra-toolkits:$DOCKERIMAGE_TAG
